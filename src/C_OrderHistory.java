
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


/**
 *
 * @author User
 */
public class C_OrderHistory extends javax.swing.JFrame {
    private DefaultTableModel model = new DefaultTableModel();
    private String[] column = {"Order ID", "Vendor", "Details", "Quantity", "Price", "Date", "Reviews", "Ratings"};
    private int row = -1;
    
    private Customer customer;
    /**
     * Creates new form OrderHistory
     */
    public C_OrderHistory(Customer customer) {
        initComponents();
        bOrderHistoryAddReview.setEnabled(false); //Grey out buttons
        bRateOrder.setEnabled(false);
        model.setColumnIdentifiers(column);
        this.customer = customer;
        usernameOH.setText(customer.getId());
        populateOrderHistoryTable();
    }

    private C_OrderHistory() {
    }
    
    private void populateOrderHistoryTable() {
        List<Object> container = new ArrayList(TextEditor.fileReader(TextEditor.FilePaths.HISTORY)); 
        
        for (Object object: container) {
            Order orderCast = (Order) object;
            
            
            if (orderCast.getCustomerID().equals(customer.getId())){
                String date = orderCast.getOrderDay()+"/"+orderCast.getOrderMonth()+"/"+orderCast.getOrderYear();
                String[] orderHistory = {orderCast.getId(), orderCast.getVendorName(), orderCast.getFood(), String.valueOf(orderCast.getQuantity()), date, orderCast.getReview(), String.valueOf(orderCast.getRatings())};
                model.addRow(orderHistory);
 
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderHistory = new javax.swing.JTable();
        bReorder = new javax.swing.JButton();
        usernameOH = new javax.swing.JTextField();
        tfID = new javax.swing.JTextField();
        tfVendorName = new javax.swing.JTextField();
        tfFoodDetails = new javax.swing.JTextField();
        tfQuantity = new javax.swing.JTextField();
        tfTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bOrderHistoryAddReview = new javax.swing.JButton();
        bRateOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Order History");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        OrderHistory.setModel(model);
        OrderHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                OrderHistoryMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(OrderHistory);

        bReorder.setText("Reorder Last Order");
        bReorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReorderActionPerformed(evt);
            }
        });

        usernameOH.setEditable(false);

        tfID.setEditable(false);
        tfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDActionPerformed(evt);
            }
        });

        tfVendorName.setEditable(false);

        tfFoodDetails.setEditable(false);
        tfFoodDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFoodDetailsActionPerformed(evt);
            }
        });

        tfQuantity.setEditable(false);

        tfTotal.setEditable(false);

        jLabel2.setText("RM");

        bOrderHistoryAddReview.setText("Add Review");
        bOrderHistoryAddReview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bOrderHistoryAddReviewMousePressed(evt);
            }
        });

        bRateOrder.setText("Rate");
        bRateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRateOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameOH, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfVendorName, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfFoodDetails)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(bOrderHistoryAddReview)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bRateOrder)
                            .addGap(39, 39, 39)
                            .addComponent(bReorder))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(usernameOH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfVendorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFoodDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bReorder)
                    .addComponent(bOrderHistoryAddReview)
                    .addComponent(bRateOrder))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OrderHistoryMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderHistoryMouseReleased
        // TODO add your handling code here:
        row = OrderHistory.getSelectedRow();
        String fooddetails = String.valueOf(model.getValueAt(row, 2));
        String quantity = String.valueOf(model.getValueAt (row, 3));
        String total = String.valueOf(model.getValueAt (row, 4));
        
        tfID.setText(fooddetails);
        tfVendorName.setText(quantity);
        tfFoodDetails.setText(total);
        
        String selectedRow = String.valueOf(model.getValueAt(row, 6));
        String selectedRow2 = String.valueOf(model.getValueAt(row, 7));
        if (row != -1) {
            if (selectedRow.equals("")) {
                bOrderHistoryAddReview.setEnabled(true); //Make add review button available if review has not been added
            } else if (selectedRow2.equals("")) {
                bRateOrder.setEnabled(true); //Make add rating button available if ratings has not been set
            }
        }
    }//GEN-LAST:event_OrderHistoryMouseReleased

    private void bReorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReorderActionPerformed
        if (tfID.getText() != null) {
            List<Object> container = new ArrayList<>(TextEditor.fileReader(TextEditor.FilePaths.HISTORY));
            for (Object obj : container) {
                Order checkOrders = (Order) obj;
                if (checkOrders.getId().equals(tfID.getText())) {
                    TextEditor.fileWrite(TextEditor.FilePaths.HISTORY, new Order(checkOrders.getVendorID(), tfVendorName.getText(), customer, tfFoodDetails.getText(), Double.parseDouble(tfTotal.getText())));
                    TextEditor.fileWrite(TextEditor.FilePaths.USER, new Notification(checkOrders.getVendorID(), customer, checkOrders.getId()));
                    break;
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select an order to reorder", "Error", JOptionPane.ERROR_MESSAGE); //Throw error if no orders are selected
        }
    }//GEN-LAST:event_bReorderActionPerformed

    private void tfFoodDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFoodDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFoodDetailsActionPerformed

    private void bOrderHistoryAddReviewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bOrderHistoryAddReviewMousePressed
        if (bOrderHistoryAddReview.isEnabled()) {
            List<Object> container = new ArrayList<>(TextEditor.fileReader(TextEditor.FilePaths.HISTORY));
            for (Object object : container) {
                Order review = (Order) object;
                if (review.getId().equals(model.getValueAt(row, 0))) {
                    review.setReview(JOptionPane.showInputDialog(null, "Enter review:")); //Pop out a dialog for user to enter reviews
                    TextEditor.textDelete(TextEditor.FilePaths.HISTORY, review);
                    TextEditor.fileWrite(TextEditor.FilePaths.HISTORY, review);
                    break; //Break out of loop to speed up processing
                }
            }
        }
    }//GEN-LAST:event_bOrderHistoryAddReviewMousePressed

    private void bRateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRateOrderActionPerformed
        if (bRateOrder.isEnabled()) {
            List<Object> container = new ArrayList<>(TextEditor.fileReader(TextEditor.FilePaths.HISTORY));
            for (Object object : container) {
                Order review = (Order) object;
                if (review.getId().equals(model.getValueAt(row, 0))) {
                    int rating;
                    while (true) {
                        try {
                            String input = JOptionPane.showInputDialog(null, "Enter rating from value of 1 - 5:");
                            if (input == null) {
                                // User clicked Cancel or closed the dialog
                                return;
                            }
                            rating = Integer.parseInt(input);
                            if (rating >= 1 && rating <= 5) { //Input validation to check if within range
                                break; // Valid input, break out of the loop
                            } else {
                                JOptionPane.showMessageDialog(null, "Invalid input. Please enter a number from 1 to 5.");
                            }
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(null, "Invalid input. Please enter a number from 1 to 5.");
                        }
                    }
                    review.setRatings(rating);
                    TextEditor.textDelete(TextEditor.FilePaths.HISTORY, review);
                    TextEditor.fileWrite(TextEditor.FilePaths.HISTORY, review);
                    break; // Break out of the loop to speed up processing
                }
            }
        }
    }//GEN-LAST:event_bRateOrderActionPerformed

    private void tfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(C_OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(C_OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(C_OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(C_OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new C_OrderHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderHistory;
    private javax.swing.JButton bOrderHistoryAddReview;
    private javax.swing.JButton bRateOrder;
    private javax.swing.JButton bReorder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tfFoodDetails;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfQuantity;
    private javax.swing.JTextField tfTotal;
    private javax.swing.JTextField tfVendorName;
    private javax.swing.JTextField usernameOH;
    // End of variables declaration//GEN-END:variables
}
